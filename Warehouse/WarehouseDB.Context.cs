//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warehouse
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WareHouseDBEntities : DbContext
    {
        public WareHouseDBEntities()
            : base("name=WareHouseDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Product_Date> Product_Date { get; set; }
        public virtual DbSet<Sale_Permit> Sale_Permit { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Supply> Supplies { get; set; }
        public virtual DbSet<Supply_Permit> Supply_Permit { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<Movement> Movements { get; set; }
    
        public virtual int CascadingProductDate(Nullable<int> product_FK, Nullable<System.DateTime> product_ProDate, Nullable<System.DateTime> new_ProDate)
        {
            var product_FKParameter = product_FK.HasValue ?
                new ObjectParameter("Product_FK", product_FK) :
                new ObjectParameter("Product_FK", typeof(int));
    
            var product_ProDateParameter = product_ProDate.HasValue ?
                new ObjectParameter("Product_ProDate", product_ProDate) :
                new ObjectParameter("Product_ProDate", typeof(System.DateTime));
    
            var new_ProDateParameter = new_ProDate.HasValue ?
                new ObjectParameter("New_ProDate", new_ProDate) :
                new ObjectParameter("New_ProDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CascadingProductDate", product_FKParameter, product_ProDateParameter, new_ProDateParameter);
        }
    
        public virtual int CascadingProductUnit(Nullable<int> product_FK, string product_Unit, string new_Unit)
        {
            var product_FKParameter = product_FK.HasValue ?
                new ObjectParameter("Product_FK", product_FK) :
                new ObjectParameter("Product_FK", typeof(int));
    
            var product_UnitParameter = product_Unit != null ?
                new ObjectParameter("Product_Unit", product_Unit) :
                new ObjectParameter("Product_Unit", typeof(string));
    
            var new_UnitParameter = new_Unit != null ?
                new ObjectParameter("New_Unit", new_Unit) :
                new ObjectParameter("New_Unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CascadingProductUnit", product_FKParameter, product_UnitParameter, new_UnitParameter);
        }
    
        public virtual int CascadingSupplyPermit(Nullable<int> supply_Permit_FK, Nullable<int> product_FK, Nullable<System.DateTime> proDate, Nullable<int> product_FK_New, Nullable<System.DateTime> proDateNew, Nullable<int> qty)
        {
            var supply_Permit_FKParameter = supply_Permit_FK.HasValue ?
                new ObjectParameter("Supply_Permit_FK", supply_Permit_FK) :
                new ObjectParameter("Supply_Permit_FK", typeof(int));
    
            var product_FKParameter = product_FK.HasValue ?
                new ObjectParameter("Product_FK", product_FK) :
                new ObjectParameter("Product_FK", typeof(int));
    
            var proDateParameter = proDate.HasValue ?
                new ObjectParameter("ProDate", proDate) :
                new ObjectParameter("ProDate", typeof(System.DateTime));
    
            var product_FK_NewParameter = product_FK_New.HasValue ?
                new ObjectParameter("Product_FK_New", product_FK_New) :
                new ObjectParameter("Product_FK_New", typeof(int));
    
            var proDateNewParameter = proDateNew.HasValue ?
                new ObjectParameter("ProDateNew", proDateNew) :
                new ObjectParameter("ProDateNew", typeof(System.DateTime));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CascadingSupplyPermit", supply_Permit_FKParameter, product_FKParameter, proDateParameter, product_FK_NewParameter, proDateNewParameter, qtyParameter);
        }
    
        public virtual ObjectResult<GetDetailedQty_Result> GetDetailedQty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDetailedQty_Result>("GetDetailedQty");
        }
    
        public virtual ObjectResult<GetTotalQty_Result> GetTotalQty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalQty_Result>("GetTotalQty");
        }
    
        public virtual int ResetIdentity(string table, string identity)
        {
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var identityParameter = identity != null ?
                new ObjectParameter("Identity", identity) :
                new ObjectParameter("Identity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetIdentity", tableParameter, identityParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int AddMovement(Nullable<int> warehouse_From_FK, Nullable<int> warehouse_To_FK, Nullable<int> supply_Permit_FK, Nullable<int> product_FK, Nullable<System.DateTime> proDate, Nullable<int> qty, Nullable<System.DateTime> date)
        {
            var warehouse_From_FKParameter = warehouse_From_FK.HasValue ?
                new ObjectParameter("Warehouse_From_FK", warehouse_From_FK) :
                new ObjectParameter("Warehouse_From_FK", typeof(int));
    
            var warehouse_To_FKParameter = warehouse_To_FK.HasValue ?
                new ObjectParameter("Warehouse_To_FK", warehouse_To_FK) :
                new ObjectParameter("Warehouse_To_FK", typeof(int));
    
            var supply_Permit_FKParameter = supply_Permit_FK.HasValue ?
                new ObjectParameter("Supply_Permit_FK", supply_Permit_FK) :
                new ObjectParameter("Supply_Permit_FK", typeof(int));
    
            var product_FKParameter = product_FK.HasValue ?
                new ObjectParameter("Product_FK", product_FK) :
                new ObjectParameter("Product_FK", typeof(int));
    
            var proDateParameter = proDate.HasValue ?
                new ObjectParameter("ProDate", proDate) :
                new ObjectParameter("ProDate", typeof(System.DateTime));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMovement", warehouse_From_FKParameter, warehouse_To_FKParameter, supply_Permit_FKParameter, product_FKParameter, proDateParameter, qtyParameter, dateParameter);
        }
    }
}
